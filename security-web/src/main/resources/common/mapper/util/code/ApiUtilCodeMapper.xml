<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.supporti.common.util.code.mapper.ApiUtilCodeMapper">

    <sql id="treeCodeSelectFromWhere">
        WITH RECURSIVE `tree_code` AS (
            SELECT
                `root_code`.`id`,
                `root_code`.`parent_id`,
                `root_code`.`name`,
                `root_code`.`description`,
                `root_code`.`value`,
                `root_code`.`order_no`,
                `root_code`.`status`,
                `root_code`.`created_date`,
                `root_code`.`last_modified_date`,
                1 AS `depth`,
                `root_code`.`name` AS `name_path`,
                CAST(LPAD(`root_code`.`order_no`, 3, '0') AS VARCHAR(100)) AS `order_no_path`,
                IFNULL((
                    SELECT
                        COUNT(`lower_code`.`id`)
                    FROM
                        `tb_code` `lower_code`
                    WHERE
                        `lower_code`.`parent_id` = `root_code`.`id`
                    GROUP BY
                        `root_code`.`id`
                ), 0) AS `children_count`
            FROM
                `tb_code` `root_code`
            WHERE
                `root_code`.`parent_id` IS NULL
            UNION ALL
            SELECT
                `children_code`.`id`,
                `children_code`.`parent_id`,
                `children_code`.`name`,
                `children_code`.`description`,
                `children_code`.`value`,
                `children_code`.`order_no`,
                `children_code`.`status`,
                `children_code`.`created_date`,
                `children_code`.`last_modified_date`,
                (`tree_code`.`depth` + 1) AS `depth`,
                CONCAT(`tree_code`.`name_path`, '/', `children_code`.`name`) AS `name_path`,
                CONCAT(`tree_code`.`order_no_path`, '/', LPAD(`children_code`.`order_no`, 3, '0')) AS `order_no_path`,
                IFNULL((
                    SELECT
                        COUNT(`lower_code`.`id`)
                    FROM
                        `tb_code` `lower_code`
                    WHERE
                        `lower_code`.`parent_id` = `children_code`.`id`
                    GROUP BY
                        `children_code`.`id`
                ), 0) AS `children_count`
            FROM
                `tb_code` `children_code`
            INNER JOIN
                `tree_code`
            ON
                `children_code`.`parent_id` = `tree_code`.`id`
        )
        SELECT
            `tree_code`.`id`,
            `tree_code`.`parent_id`,
            `tree_code`.`name`,
            `tree_code`.`description`,
            `tree_code`.`value`,
            `tree_code`.`order_no`,
            `tree_code`.`status`,
            `tree_code`.`created_date`,
            `tree_code`.`last_modified_date`,
            `tree_code`.`depth`,
            `tree_code`.`name_path`,
            `tree_code`.`order_no_path`,
            `tree_code`.`children_count`
        FROM
            `tree_code`
        <where>
        </where>
    </sql>

    <resultMap id="treeCodeResultMap" type="kr.supporti.common.util.code.dto.TreeCodeDto">
        <result property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="value" column="value"/>
        <result property="orderNo" column="order_no"/>
        <result property="status" column="status"/>
        <result property="createdDate" column="created_date"/>
        <result property="lastModifiedDate" column="last_modified_date"/>
        <result property="depth" column="depth"/>
        <result property="namePath" column="name_path"/>
        <result property="orderNoPath" column="order_no_path"/>
        <result property="childrenCount" column="children_count"/>
    </resultMap>

    <select
        id="selectTreeCodeList"
        parameterType="java.util.Map"
        resultMap="treeCodeResultMap"
    >
        <include refid="PageFragment.sortStart"/>
        <include refid="treeCodeSelectFromWhere"/>
        <include refid="PageFragment.sortEnd"/>
        <include refid="PageFragment.limitOffset"/>
    </select>

    <select
        id="selectTreeCodeListCount"
        parameterType="java.util.Map"
        resultType="java.lang.Integer"
    >
        <include refid="PageFragment.countStart"/>
        <include refid="treeCodeSelectFromWhere"/>
        <include refid="PageFragment.countEnd"/>
    </select>

</mapper>