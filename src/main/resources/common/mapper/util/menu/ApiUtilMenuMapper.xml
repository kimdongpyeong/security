<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.supporti.common.util.menu.mapper.ApiUtilMenuMapper">

    <sql id="treeMenuSelectFromWhere">
        WITH RECURSIVE `tree_menu` AS (
            SELECT
                `root_menu`.`id`,
                `root_menu`.`parent_id`,
                `root_menu`.`name`,
                `root_menu`.`description`,
                `root_menu`.`path`,
                `root_menu`.`ranking`,
                `root_menu`.`show`,
                `root_menu`.`side_show`,
                `root_menu`.`publicy_status`,
                `root_menu`.`icon`,
                `root_menu`.`created_date`,
                `root_menu`.`last_modified_date`,
                1 AS `depth`,
                `root_menu`.`name` AS `name_path`,
                CAST(LPAD(`root_menu`.`ranking`, 3, '0') AS VARCHAR(100)) AS `ranking_path`,
                IFNULL((
                    SELECT
                        COUNT(`lower_menu`.`id`)
                    FROM
                        `tb_menu` `lower_menu`
                    WHERE
                        `lower_menu`.`parent_id` = `root_menu`.`id`
                    GROUP BY
                        `root_menu`.`id`
                ), 0) AS `children_count`
            FROM
                `tb_menu` `root_menu`
            WHERE
                `root_menu`.`parent_id` IS NULL
            UNION ALL
            SELECT
                `children_menu`.`id`,
                `children_menu`.`parent_id`,
                `children_menu`.`name`,
                `children_menu`.`description`,
                `children_menu`.`path`,
                `children_menu`.`ranking`,
                `children_menu`.`show`,
                `children_menu`.`side_show`,
                `children_menu`.`publicy_status`,
                `children_menu`.`icon`,
                `children_menu`.`created_date`,
                `children_menu`.`last_modified_date`,
                (`tree_menu`.`depth` + 1) AS `depth`,
                CONCAT(`tree_menu`.`name_path`, '/', `children_menu`.`name`) AS `name_path`,
                CONCAT(`tree_menu`.`ranking_path`, '/', LPAD(`children_menu`.`ranking`, 3, '0')) AS `ranking_path`,
                IFNULL((
                    SELECT
                        COUNT(`lower_menu`.`id`)
                    FROM
                        `tb_menu` `lower_menu`
                    WHERE
                        `lower_menu`.`parent_id` = `children_menu`.`id`
                    GROUP BY
                        `children_menu`.`id`
                ), 0) AS `children_count`
            FROM
                `tb_menu` `children_menu`
            INNER JOIN
                `tree_menu`
            ON
                `children_menu`.`parent_id` = `tree_menu`.`id`
        )
        SELECT
            `tree_menu`.`id`,
            `tree_menu`.`parent_id`,
            `tree_menu`.`name`,
            `tree_menu`.`description`,
            `tree_menu`.`path`,
            `tree_menu`.`ranking`,
            `tree_menu`.`show`,
            `tree_menu`.`side_show`,
            `tree_menu`.`publicy_status`,
            `tree_menu`.`icon`,
            `tree_menu`.`created_date`,
            `tree_menu`.`last_modified_date`,
            `tree_menu`.`depth`,
            `tree_menu`.`name_path`,
            `tree_menu`.`ranking_path`,
            `tree_menu`.`children_count`
        FROM
            `tree_menu`
        <where>
            <if test="treeMenuParamDto.userId != null">
            <![CDATA[
                AND `tree_menu`.`id` IN (
                    SELECT `menu_id` FROM `tb_role_menu` WHERE `role_id` IN (
                        SELECT `role_id` FROM `tb_role_user` WHERE `user_id` = #{treeMenuParamDto.userId}
                    )
                )
            ]]>
            </if>
            <if test="treeMenuParamDto.isDefault == true">
                AND `tree_menu`.`path` NOT LIKE '/settings%'
            </if>
        </where>
    </sql>

    <resultMap id="treeMenuResultMap" type="kr.supporti.common.util.menu.dto.TreeMenuDto">
        <result property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="path" column="path"/>
        <result property="ranking" column="ranking"/>
        <result property="show" column="show"/>
        <result property="sideShow" column="side_show"/>
        <result property="publicyStatus" column="publicy_status"/>
        <result property="createdDate" column="created_date"/>
        <result property="lastModifiedDate" column="last_modified_date"/>
        <result property="namePath" column="name_path"/>
        <result property="rankingPath" column="ranking_path"/>
    </resultMap>

    <select
        id="selectTreeMenuList"
        parameterType="java.util.Map"
        resultMap="treeMenuResultMap"
    >
        <include refid="PageFragment.sortStart"/>
        <include refid="treeMenuSelectFromWhere"/>
        <include refid="PageFragment.sortEnd"/>
        <include refid="PageFragment.limitOffset"/>
    </select>

    <select
        id="selectTreeMenuListCount"
        parameterType="java.util.Map"
        resultType="java.lang.Integer"
    >
        <include refid="PageFragment.countStart"/>
        <include refid="treeMenuSelectFromWhere"/>
        <include refid="PageFragment.countEnd"/>
    </select>

</mapper>