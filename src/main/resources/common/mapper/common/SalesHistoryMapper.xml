<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.supporti.api.common.mapper.SalesHistoryMapper">

    <sql id="selectFrom">
        SELECT
           `sales_history`.`id`,
           `sales_history`.`sales_start_date`,
           `sales_history`.`sales_end_date`,
           `sales_history`.`count`,
           `sales_history`.`total_sales`,
           `sales_history`.`payment_method_cd`,
           `sales_history`.`created_by`,
           `sales_history`.`created_date`,
           `sales_history`.`last_modified_date`
        FROM
            `tb_sales_history` `sales_history`
    </sql>

    <sql id="where">
        <where>
            <if test="salesHistoryParamDto.createdBy != null and salesHistoryParamDto.createdBy != ''">
                AND `sales_history`.`created_by` = #{salesHistoryParamDto.createdBy}
            </if>
        </where>
    </sql>

    <resultMap id="salesHistoryResultMap" type="kr.supporti.api.common.entity.SalesHistoryEntity">
        <result property="id" column="id"/>
        <result property="salesStartDate" column="sales_start_date"/>
        <result property="salesEndDate" column="sales_end_date"/>
        <result property="count" column="count"/>
        <result property="totalSales" column="total_sales"/>
        <result property="paymentMethodCd" column="payment_method_cd"/>
        <result property="createdBy" column="created_by"/>
        <result property="createdDate" column="created_date"/>
        <result property="lastModifiedDate" column="last_modified_date"/>
        <result property="salesDate" column="sales_date"/>
        <result property="salesTotal" column="sales_total"/>
        <result property="paymentTotal" column="payment_total"/>
    </resultMap>

    <resultMap id="salesTotalResultMap" type="kr.supporti.api.common.dto.SalesTotalDto">
        <result property="salesDate" column="sales_date"/>
        <result property="salesTotal" column="sales_total"/>
        <result property="paymentTotal" column="payment_total"/>
        <result property="dayTotal" column="day_total"/>
        <result property="month" column="month"/>
        <result property="monthTotal" column="month_total"/>
    </resultMap>

    <select
        id="selectSalesHistoryList"
        parameterType="java.util.Map"
        resultMap="salesHistoryResultMap"
    >
        <include refid="PageFragment.sortStart"/>
        <include refid="selectFrom"/>
        <include refid="where"/>
        <include refid="PageFragment.sortEnd"/>
        <include refid="PageFragment.limitOffset"/>
    </select>

    <select
        id="selectSalesHistoryListCount"
        parameterType="java.util.Map"
        resultType="java.lang.Integer"
    >
        <include refid="PageFragment.countStart"/>
        <include refid="selectFrom"/>
        <include refid="where"/>
        <include refid="PageFragment.countEnd"/>
    </select>

    <select
        id="selectSalesHistory"
        parameterType="java.util.Map"
        resultMap="salesHistoryResultMap"
    >
        <include refid="selectFrom"/>
        WHERE
            `sales_history`.`id` = #{id}
    </select>

    <select
        id="selectSalesTotalList"
        parameterType="java.util.Map"
        resultMap="salesTotalResultMap"
    >
        <include refid="PageFragment.sortStart"/>
        (
           (
              SELECT
                 date_format(A.`date`,'%Y-%m') AS `month`,
                 A.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
                 LEFT JOIN
                 (
                    (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
                 ON A.`date` = B.`date`
              WHERE
                 A.`date` BETWEEN #{salesHistoryParamDto.startDate} AND #{salesHistoryParamDto.endDate}
           )
           UNION
           (
              SELECT
                 date_format(B.`date`,'%Y-%m') AS `month`,
                 B.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
              RIGHT JOIN (
                 (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
              ON A.`date` = B.`date`
              WHERE
                 B.`date` BETWEEN #{salesHistoryParamDto.startDate} AND #{salesHistoryParamDto.endDate}
           )
           ORDER BY `sales_date`

        )
        <include refid="PageFragment.sortEnd"/>
        <include refid="PageFragment.limitOffset"/>
    </select>

    <select
        id="selectSalesTotalListCount"
        parameterType="java.util.Map"
        resultType="java.lang.Integer"
    >
        <include refid="PageFragment.countStart"/>
        (
           (
              SELECT
                 date_format(A.`date`,'%Y-%m') AS `month`,
                 A.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
                 LEFT JOIN
                 (
                    (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
                 ON A.`date` = B.`date`
              WHERE
                 A.`date` BETWEEN #{salesHistoryParamDto.startDate} AND #{salesHistoryParamDto.endDate}
           )
           UNION
           (
              SELECT
                 date_format(B.`date`,'%Y-%m') AS `month`,
                 B.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
              RIGHT JOIN (
                 (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
              ON A.`date` = B.`date`
              WHERE
                 B.`date` BETWEEN #{salesHistoryParamDto.startDate} AND #{salesHistoryParamDto.endDate}
           )
           ORDER BY `sales_date`

        )
        <include refid="PageFragment.countEnd"/>
    </select>

    <select
        id="selectSalesTermTotalList"
        parameterType="java.util.Map"
        resultMap="salesTotalResultMap"
    >
        <include refid="PageFragment.sortStart"/>
        SELECT
            A.year AS year,
            A.month AS `month`,
            SUM(A.day_total) AS `month_total`
        FROM
        (
           (
              SELECT
                YEAR(A.`date`) AS `year`,
                 date_format(A.`date`,'%Y-%m') AS `month`,
                 A.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
                 LEFT JOIN
                 (
                    (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
                 ON A.`date` = B.`date`
           )
           UNION
           (
              SELECT
                YEAR(B.`date`) AS `year`,
                 date_format(B.`date`,'%Y-%m') AS `month`,
                 B.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
              RIGHT JOIN (
                 (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
              ON A.`date` = B.`date`
           )
           ORDER BY `sales_date`
        ) A
        <if test="salesHistoryParamDto.startMonth != null and salesHistoryParamDto.startMonth != '' and salesHistoryParamDto.endMonth != null and salesHistoryParamDto.endMonth != ''">
        WHERE
            A.month BETWEEN #{salesHistoryParamDto.startMonth} AND #{salesHistoryParamDto.endMonth}
        </if>
        <if test="salesHistoryParamDto.searchYear != null and salesHistoryParamDto.searchYear != ''">
        WHERE
            A.year = #{salesHistoryParamDto.searchYear}
        </if>
        GROUP BY
            A.month
        <include refid="PageFragment.sortEnd"/>
        <include refid="PageFragment.limitOffset"/>
    </select>

    <select
        id="selectSalesTermTotalListCount"
        parameterType="java.util.Map"
        resultType="java.lang.Integer"
    >
        <include refid="PageFragment.countStart"/>
        SELECT
            A.year AS year,
            A.month AS `month`,
            SUM(A.day_total) AS `month_total`
        FROM
        (
           (
              SELECT
                YEAR(A.`date`) AS `year`,
                 date_format(A.`date`,'%Y-%m') AS `month`,
                 A.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
                 LEFT JOIN
                 (
                    (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
                 ON A.`date` = B.`date`
           )
           UNION
           (
              SELECT
                YEAR(B.`date`) AS `year`,
                 date_format(B.`date`,'%Y-%m') AS `month`,
                 B.`date` AS `sales_date`,
                 IFNULL(A.total, 0)  AS `sales_total`,
                 IFNULL(B.total, 0) AS `payment_total`,
                 (IFNULL(A.total, 0) + IFNULL(B.total, 0)) AS `day_total`
              FROM
                 (
                    SELECT
                       `sales`.sales_start_date AS `date`,
                       sum(`sales`.total_sales) AS `total`
                    FROM
                       tb_sales_history `sales`
                    WHERE
                       `sales`.`created_by` = #{salesHistoryParamDto.createdBy}
                    GROUP BY
                       `sales`.`sales_start_date`
                 )   A
              RIGHT JOIN (
                 (
                       (
                          SELECT
                             DATE(`payment`.`last_payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`payment`.payment_date)
                       )
                       UNION
                       (
                          SELECT
                             DATE(`regular_payment`.`payment_date`) AS `date`,
                             SUM(`payment`.`amount`) AS `total`
                          FROM
                             tb_payment_history `payment`
                          JOIN
                             tb_regular_payment_history `regular_payment`
                          ON
                             payment.id = regular_payment.payment_history_id
                          WHERE
                             `payment`.`request_lecturer_id` = #{salesHistoryParamDto.createdBy}
                          AND
                             `payment`.`state` = 'S'
                          GROUP BY
                             DATE(`regular_payment`.payment_date)
                       )
                    )
                 ) B
              ON A.`date` = B.`date`
           )
           ORDER BY `sales_date`
        ) A
        <if test="salesHistoryParamDto.startMonth != null and salesHistoryParamDto.startMonth != '' and salesHistoryParamDto.endMonth != null and salesHistoryParamDto.endMonth != ''">
        WHERE
            A.month BETWEEN #{salesHistoryParamDto.startMonth} AND #{salesHistoryParamDto.endMonth}
        </if>
        <if test="salesHistoryParamDto.searchYear != null and salesHistoryParamDto.searchYear != ''">
        WHERE
            A.year = #{salesHistoryParamDto.searchYear}
        </if>
        GROUP BY
            A.month
        <include refid="PageFragment.countEnd"/>
    </select>
</mapper>